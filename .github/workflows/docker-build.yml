name: Build and Deploy Docker Image Test

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract Git commit SHA
      id: vars
      run: |
        echo "SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
        echo "IMAGE_TAG=${{ steps.vars.outputs.SHA_SHORT }}" >> $GITHUB_ENV


    - name: Build and push API Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./api/Dockerfile
        push: true
        no-cache: true
        tags: |
          bartczaktech/api:${{ env.IMAGE_TAG }}

    - name: Build and push Scraper Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./scraper/Dockerfile
        push: true
        no-cache: true
        tags: |
          bartczaktech/scraper:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SSH client and expect
      run: sudo apt-get update && sudo apt-get install -y openssh-client expect

    - name: Add SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: '${{ secrets.SSH_IP_ADDRESS }}:${{ secrets.SSH_PORT }}'

    - name: SSH into server
      run: |
        expect <<- EOF
        spawn ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_IP_ADDRESS }}
        expect "Password:"
        send "${{ secrets.SSH_PASSPHRASE }}\r"
        interact
        EOF

    - name: Navigate to project directory
      run: cd ${{ secrets.PATH_TO_PROJECT }}

    - name: Pull latest Docker images
      run: docker compose -f docker-compose.yml pull

    - name: Stop running containers
      run: docker compose -f docker-compose.yml down

    - name: Start updated containers
      run: docker compose -f docker-compose.yml up -d