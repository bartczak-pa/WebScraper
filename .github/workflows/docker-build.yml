name: Build and Deploy Docker Image Test

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.set-image-tag.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Git commit SHA
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set IMAGE_TAG
        id: set-image-tag
        run: echo "::set-output name=IMAGE_TAG::${GITHUB_SHA::7}"

      - name: Build and push API Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./api/Dockerfile
          push: true
          tags: |
            bartczaktech/api:${{ env.IMAGE_TAG }}
            bartczaktech/api:latest

      - name: Build and push Scraper Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./scraper/Dockerfile
          push: true
          tags: |
            bartczaktech/scraper:${{ env.IMAGE_TAG }}
            bartczaktech/scraper:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
        IMAGE_TAG: ${{ needs.build-and-push.outputs.IMAGE_TAG }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SSH client and expect
      run: sudo apt-get update && sudo apt-get install -y openssh-client expect

    - name: Add SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: '${{ secrets.SSH_IP_ADDRESS }}:${{ secrets.SSH_PORT }}'

    - name: SSH into server
      run: |
        expect <<- EOF
        spawn ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_IP_ADDRESS }}
        expect "Password:"
        send "${{ secrets.SSH_PASSPHRASE }}\r"
        interact
        EOF

    - name: Navigate to project directory
      run: cd ${{ secrets.PATH_TO_PROJECT }}

    - name: Pull latest Docker images
      run: docker compose -f docker-compose.yml pull

    - name: Stop running containers
      run: docker compose -f docker-compose.yml down

    - name: Start updated containers
      run: docker compose -f docker-compose.yml up -d